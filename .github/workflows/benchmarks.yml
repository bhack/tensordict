name: Continuous Benchmark
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  deployments: write
  contents: write

concurrency:
  # Documentation suggests ${{ github.head_ref }}, but that's only available on pull_request/pull_request_target triggers, so using ${{ github.ref }}.
  # On master, we want all builds to complete even if merging happens faster to make it easier to discover at which point something broke.
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && format('ci-master-{0}', github.sha) || format('ci-{0}', github.ref) }}
  cancel-in-progress: true

jobs:
  benchmark_cpu:
    name: CPU Pytest benchmark
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Setup Environment
        run: |
          pip install -e .
          pip install pytest pytest-benchmark
      - name: Run benchmarks
        run: |
          cd benchmarks/
          python -m pytest --rank 0 --benchmark-json output.json
      - name: Store benchmark results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: CPU Benchmark Results
          tool: 'pytest'
          output-file-path: benchmarks/output.json
          fail-on-alert: true
          alert-threshold: '200%'
          alert-comment-cc-users: '@vmoens,@tcbegley'
          comment-on-alert: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          gh-pages-branch: gh-pages
          auto-push: true


  benchmark_gpu:
    name: GPU Pytest benchmark
    strategy:
      matrix:
        python_version: ["3.8"] # "3.8", "3.9", "3.10", "3.11"
        cuda_arch_version: ["11.6"] # "11.6", "11.7"
      fail-fast: false
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      runner: linux.g5.4xlarge.nvidia.gpu
      repository: pytorch/rl
      gpu-arch-type: cuda
      gpu-arch-version: ${{ matrix.cuda_arch_version }}
      upload-artifact: benchmarks/output.json
      timeout: 90
      script: |
        # Install deps
        export TZ=Europe/London
        export DEBIAN_FRONTEND=noninteractive  # tzdata bug
        apt-get update -y
        apt-get update -y
        apt-get upgrade -y
        apt-get -y install gcc curl g++ unzip wget sudo git cmake
        # Check ldd --version
        ldd --version
        # Checkout
        actions/checkout@v3
        # Update pip
        apt-get install python3.8 python3-pip -y
        pip3 install --upgrade pip
        # Setup conda
        rm -rf $HOME/miniconda
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
        bash ~/miniconda.sh -b -p $HOME/miniconda
        # setup Path
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH
        echo "CONDA=$HOME/miniconda" >> $GITHUB_PATH
        # create and activate conda env
        $HOME/miniconda/bin/conda create --name build_binary python=${{ matrix.python-version }}
        $HOME/miniconda/bin/conda info
        $HOME/miniconda/bin/activate build_binary
        # Setup git
        git config --global --add safe.directory /__w/tensordict/tensordict
        # setup Path
        echo /usr/local/bin >> $GITHUB_PATH
        # Setup Environment
        python -m pip install -e .
        python -m pip install pytest pytest-benchmark
        # Test CUDA
        python -c "import torch;assert torch.cuda.device_count()"
        # Run benchmarks
        cd benchmarks/
        python -m pytest --rank 0 --benchmark-json output.json

  benchmark_gpu_upload:
    name: GPU Pytest benchmark -- Upload
    needs: benchmark_gpu
    runs-on: ubuntu-20.04
    steps:
    - name: Store benchmark results
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: GPU Benchmark Results
        tool: 'pytest'
        output-file-path: benchmarks/output.json
        fail-on-alert: true
        alert-threshold: '200%'
        alert-comment-cc-users: '@vmoens,@tcbegley'
        comment-on-alert: true
        github-token: ${{ secrets.GITHUB_TOKEN }}
        gh-pages-branch: gh-pages
        auto-push: true

    
